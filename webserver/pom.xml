<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ytcf.msa</groupId>
        <artifactId>framework</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <groupId>com.ytcf.msa.framework</groupId>
    <artifactId>webserver</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>webserver</name>
    <description>这是一个Docker测试项目</description>

    <properties>
        <java.version>1.8</java.version>

        <!--
        远程推送地址
        <docker.registry>127.0.0.1:5000</docker.registry>
        -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.ytcf.msa.framework</groupId>
            <artifactId>registry</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <scope>runtime</scope>
        </dependency>
    </dependencies>

    <!--
        构建工具
    -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--docker 镜像工具-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
                <configuration>
                    <dockerHost>http://118.24.70.205:3388</dockerHost>
                    <!--
                    镜像名
                    <imageName>${docker.registry}/${project.groupId}/${project.artifactId}:${project.version}</imageName>
                    -->
                    <imageName>${project.groupId}/${project.artifactId}:${project.version}</imageName>
                    <!--Dockerfile文件所在目录-->
                    <dockerDirectory>${project.build.outputDirectory}</dockerDirectory>
                    <!--需要复制的文件源配置-->
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>

                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
